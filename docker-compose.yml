version: '3'
services:
  frontend:
    container_name: frontend
    build: ./docker/frontend/
    tty: true
    volumes:
      - ./frontend:/frontend/
    ports:
      - 3000:3000
    environment:
      - WATCHPACK_POLLING=true

  backend:
    container_name: backend
    build: ./docker/backend/
    tty: true
    volumes:
      - ./backend:/backend/
    ports:
      - "8080:8080"

  nginx:
    container_name: nginx
    image: nginx
    tty: true
    restart: always
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    environment:
      - TZ=Asia/Tokyo
    depends_on:
      - frontend

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    tty: true
    ports:
      - 8888:80
    volumes:
      - pgadmin_volume:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: root@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password
    hostname: pgadmin
    depends_on:
      - postgres

volumes:
  postgres_volume:
  pgadmin_volume:
  
networks:
    default:
      name: app-network